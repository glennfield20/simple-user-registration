#01 Project Setup_Server index.html with ExpressJs
	- create index.js inside server dir
	- import express & initialize
	- Define catch all routes
	- make app listen to port 3000 and console.log('Running on localhost:3000')
	- install & setup babel-cli and also install express
	- Define new command `server` in package & use `babel-node` to run server/index.js
	- Install babel-preset-es2015 in dev.
	- Create .babelrc file and config babel define presets to es2015.
	- In index.js send html index.html use path.
	- Install to nodemon (This package will restart our server everytime
		we change any file inside server folder)
	- In package instead of babel-node only we use nodeman & watch only the server folder		 & provide file which nodemon will run.
  - Create .gitingore file and ignore node_modules

#02 Project Setup_Render react component
	- In html add div id root or app.
	- Create index.js inside of client folder.
	- import React, render, App in client/index.js
	- render App component in the `root` or `app`.
  - Create App component. Import React & export default function `Hello from React`
	- Install react react-dom
	- Add script tag & point it to `bundle.js` (Webpack will bundle all client stuff
		into one bundle.js file & then it will serve it.)

	SETUP WEBPACK
	- Install webpack & webpack-dev-middleware to the dev.
	- In server/index.js import webpack from webpack & webpackMiddleware from webpack-dev-middleware
	- Import webpackConfig from root '../webpack.config.dev.js'
	- use webpackMiddleware it takes a compiler which is the webpack that compile webpackConfig
	- create webpack.config.dev.js & export default object
	- set entry to /client/index.js using path import it.
  - set output object
			path to __dirname
			filename to bundle.js
			publicPath: '/'
	- set module object loaders array of object.
		- test to all .js of the end of a file. /\.js$/
		- include to only all file inside `client`.
		- loaders an array include babel-loader to transfile es6 code
		
	- set resolve object extensions array include with "*" and .js file
	- Restart server
	- babel doesn't understand react so we need add react in the babelrc preset.
  - install babel-preset-react.
	- Restart server you should see no errors and check in the console StateLess
		component.
  - set devtool to eval-source-map. Use for debugging.
